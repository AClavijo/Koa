/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
/* tslint:disable */
import * as i0 from './keyboard.component.css.shim.ngstyle';
import * as i1 from '@angular/core';
import * as i2 from '../../../../../node_modules/@angular/material/grid-list/typings/index.ngfactory';
import * as i3 from '@angular/material/core';
import * as i4 from '@angular/material/grid-list';
import * as i5 from '@angular/cdk/bidi';
import * as i6 from '@angular/common';
import * as i7 from '../../../../../../src/app/apm/apm-exercice/keyboard/keyboard.component';
import * as i8 from '../../../../../../src/app/core/apm-test/apm-test.service';
var styles_KeyboardComponent = [i0.styles];
export var RenderType_KeyboardComponent = i1.ɵcrt({ encapsulation: 0,
    styles: styles_KeyboardComponent, data: {} });
function View_KeyboardComponent_1(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 3, 'mat-grid-tile', [['class', 'mat-grid-tile']], [[4, 'background', null]], null, null, i2.View_MatGridTile_0, i2.RenderType_MatGridTile)), i1.ɵdid(1, 16384, null, 0, i3.MatPrefixRejector, [], null, null), i1.ɵdid(2, 49152, [[1, 4]], 0, i4.MatGridTile, [i1.Renderer2, i1.ElementRef], { rowspan: [0, 'rowspan'],
            colspan: [1, 'colspan'] }, null), (_l()(), i1.ɵted(3, 0, ['\n    ', '\n  ']))], function (_ck, _v) {
        var currVal_1 = _v.context.$implicit.rows;
        var currVal_2 = _v.context.$implicit.cols;
        _ck(_v, 2, 0, currVal_1, currVal_2);
    }, function (_ck, _v) {
        var currVal_0 = _v.context.$implicit.color;
        _ck(_v, 0, 0, currVal_0);
        var currVal_3 = _v.context.$implicit.text;
        _ck(_v, 3, 0, currVal_3);
    });
}
export function View_KeyboardComponent_0(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 7, 'mat-grid-list', [['class', 'mat-grid-list'], ['cols', '4'], ['rowHeight', '100px']], null, null, null, i2.View_MatGridList_0, i2.RenderType_MatGridList)),
        i1.ɵdid(1, 16384, null, 0, i3.MatPrefixRejector, [], null, null), i1.ɵdid(2, 2211840, null, 1, i4.MatGridList, [i1.Renderer2,
            i1.ElementRef, [2, i5.Directionality]], { cols: [0, 'cols'], rowHeight: [1, 'rowHeight'] }, null), i1.ɵqud(603979776, 1, { _tiles: 1 }), (_l()(), i1.ɵted(-1, 0, ['\n  '])),
        (_l()(), i1.ɵand(16777216, null, 0, 1, null, View_KeyboardComponent_1)),
        i1.ɵdid(6, 802816, null, 0, i6.NgForOf, [i1.ViewContainerRef, i1.TemplateRef,
            i1.IterableDiffers], { ngForOf: [0, 'ngForOf'] }, null), (_l()(), i1.ɵted(-1, 0, ['\n']))], function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = '4';
        var currVal_1 = '100px';
        _ck(_v, 2, 0, currVal_0, currVal_1);
        var currVal_2 = _co.keyboard;
        _ck(_v, 6, 0, currVal_2);
    }, null);
}
export function View_KeyboardComponent_Host_0(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, 'app-apm-keyboard', [], null, null, null, View_KeyboardComponent_0, RenderType_KeyboardComponent)), i1.ɵdid(1, 114688, null, 0, i7.KeyboardComponent, [i8.ApmTestService], null, null)], function (_ck, _v) {
        _ck(_v, 1, 0);
    }, null);
}
export var KeyboardComponentNgFactory = i1.ɵccf('app-apm-keyboard', i7.KeyboardComponent, View_KeyboardComponent_Host_0, {}, {}, []);
//# sourceMappingURL=keyboard.component.ngfactory.js.map